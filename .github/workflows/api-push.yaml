name: Build and Publish API

on:
    push:
        branches:
            - main
            - dev
        paths:
            - api/**
            - .github/workflows/api-push.yaml

    pull_request:
        branches:
            - main
        paths:
            - api/**

jobs:
    test:
        runs-on: ubuntu-latest
        name: Test API
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: '1.21'

            - name: Run tests
              run: |
                  cd api
                  make test

            - name: Run linting
              run: |
                  cd api
                  make vet

    build-and-push:
        runs-on: ubuntu-latest
        needs: test
        if: github.event_name == 'push'
        name: Build and Push Docker Image
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ghcr.io/${{ github.repository }}/api
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=sha,prefix={{branch}}-,format=short
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push API image
              id: build
              uses: docker/build-push-action@v5
              with:
                  context: api
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Test container startup
              run: |
                  # Use the first tag from the metadata output
                  IMAGE_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
                  echo "Testing with image: $IMAGE_TAG"
                  
                  docker run --rm -d --name test-api -p 2001:2000 "$IMAGE_TAG"
                  sleep 10
                  
                  # Test health endpoint
                  if curl -f http://localhost:2001/api/v2/packages > /dev/null 2>&1; then
                      echo "✅ API container started successfully"
                  else
                      echo "❌ API container health check failed"
                      docker logs test-api
                      exit 1
                  fi
                  
                  docker stop test-api
